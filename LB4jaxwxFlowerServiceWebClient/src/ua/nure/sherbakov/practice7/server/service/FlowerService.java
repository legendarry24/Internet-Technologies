
package ua.nure.sherbakov.practice7.server.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import ua.nure.sherbakov.practice7.entity.Flower;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "FlowerService", targetNamespace = "http://practice7.sherbakov.nure.ua/server/service")
@XmlSeeAlso({ ua.nure.sherbakov.practice7.entity.ObjectFactory.class,
		ua.nure.sherbakov.practice7.server.service.ObjectFactory.class })
public interface FlowerService {

	/**
	 * 
	 * @param pattern
	 * @return returns java.util.List<ua.nure.sherbakov.practice7.entity.Flower>
	 */
	@WebMethod
	@WebResult(targetNamespace = "http://practice7.sherbakov.nure.ua/entity")
	@RequestWrapper(localName = "findByName", targetNamespace = "http://practice7.sherbakov.nure.ua/server/service", className = "ua.nure.sherbakov.practice7.server.service.FindByName")
	@ResponseWrapper(localName = "findByNameResponse", targetNamespace = "http://practice7.sherbakov.nure.ua/server/service", className = "ua.nure.sherbakov.practice7.server.service.FindByNameResponse")
	@Action(input = "http://practice7.sherbakov.nure.ua/server/service/FlowerService/findByNameRequest", output = "http://practice7.sherbakov.nure.ua/server/service/FlowerService/findByNameResponse")
	public List<Flower> findByName(@WebParam(name = "pattern", targetNamespace = "") String pattern);

	/**
	 * 
	 * @param pattern
	 * @return returns java.util.List<ua.nure.sherbakov.practice7.entity.Flower>
	 */
	@WebMethod
	@WebResult(targetNamespace = "http://practice7.sherbakov.nure.ua/entity")
	@RequestWrapper(localName = "findByOrigin", targetNamespace = "http://practice7.sherbakov.nure.ua/server/service", className = "ua.nure.sherbakov.practice7.server.service.FindByOrigin")
	@ResponseWrapper(localName = "findByOriginResponse", targetNamespace = "http://practice7.sherbakov.nure.ua/server/service", className = "ua.nure.sherbakov.practice7.server.service.FindByOriginResponse")
	@Action(input = "http://practice7.sherbakov.nure.ua/server/service/FlowerService/findByOriginRequest", output = "http://practice7.sherbakov.nure.ua/server/service/FlowerService/findByOriginResponse")
	public List<Flower> findByOrigin(@WebParam(name = "pattern", targetNamespace = "") String pattern);

	/**
	 * 
	 * @param id
	 * @return returns ua.nure.sherbakov.practice7.entity.Flower
	 * @throws DAOException_Exception
	 */
	@WebMethod
	@WebResult(targetNamespace = "http://practice7.sherbakov.nure.ua/entity")
	@RequestWrapper(localName = "getFlower", targetNamespace = "http://practice7.sherbakov.nure.ua/server/service", className = "ua.nure.sherbakov.practice7.server.service.GetFlower")
	@ResponseWrapper(localName = "getFlowerResponse", targetNamespace = "http://practice7.sherbakov.nure.ua/server/service", className = "ua.nure.sherbakov.practice7.server.service.GetFlowerResponse")
	@Action(input = "http://practice7.sherbakov.nure.ua/server/service/FlowerService/getFlowerRequest", output = "http://practice7.sherbakov.nure.ua/server/service/FlowerService/getFlowerResponse", fault = {
			@FaultAction(className = DAOException_Exception.class, value = "http://practice7.sherbakov.nure.ua/server/service/FlowerService/getFlower/Fault/DAOException") })
	public Flower getFlower(@WebParam(name = "id", targetNamespace = "") int id) throws DAOException_Exception;

	/**
	 * 
	 * @return returns java.util.List<ua.nure.sherbakov.practice7.entity.Flower>
	 */
	@WebMethod
	@WebResult(targetNamespace = "http://practice7.sherbakov.nure.ua/entity")
	@RequestWrapper(localName = "listFlowers", targetNamespace = "http://practice7.sherbakov.nure.ua/server/service", className = "ua.nure.sherbakov.practice7.server.service.ListFlowers")
	@ResponseWrapper(localName = "listFlowersResponse", targetNamespace = "http://practice7.sherbakov.nure.ua/server/service", className = "ua.nure.sherbakov.practice7.server.service.ListFlowersResponse")
	@Action(input = "http://practice7.sherbakov.nure.ua/server/service/FlowerService/listFlowersRequest", output = "http://practice7.sherbakov.nure.ua/server/service/FlowerService/listFlowersResponse")
	public List<Flower> listFlowers();

	/**
	 * 
	 * @param id
	 * @return returns ua.nure.sherbakov.practice7.entity.Flower
	 * @throws DAOException_Exception
	 */
	@WebMethod
	@WebResult(targetNamespace = "http://practice7.sherbakov.nure.ua/entity")
	@RequestWrapper(localName = "deleteFlower", targetNamespace = "http://practice7.sherbakov.nure.ua/server/service", className = "ua.nure.sherbakov.practice7.server.service.DeleteFlower")
	@ResponseWrapper(localName = "deleteFlowerResponse", targetNamespace = "http://practice7.sherbakov.nure.ua/server/service", className = "ua.nure.sherbakov.practice7.server.service.DeleteFlowerResponse")
	@Action(input = "http://practice7.sherbakov.nure.ua/server/service/FlowerService/deleteFlowerRequest", output = "http://practice7.sherbakov.nure.ua/server/service/FlowerService/deleteFlowerResponse", fault = {
			@FaultAction(className = DAOException_Exception.class, value = "http://practice7.sherbakov.nure.ua/server/service/FlowerService/deleteFlower/Fault/DAOException") })
	public Flower deleteFlower(@WebParam(name = "id", targetNamespace = "") int id) throws DAOException_Exception;

	/**
	 * 
	 * @param flowers
	 * @return returns int
	 * @throws DAOException_Exception
	 */
	@WebMethod
	@WebResult(targetNamespace = "")
	@RequestWrapper(localName = "addFlower", targetNamespace = "http://practice7.sherbakov.nure.ua/server/service", className = "ua.nure.sherbakov.practice7.server.service.AddFlower")
	@ResponseWrapper(localName = "addFlowerResponse", targetNamespace = "http://practice7.sherbakov.nure.ua/server/service", className = "ua.nure.sherbakov.practice7.server.service.AddFlowerResponse")
	@Action(input = "http://practice7.sherbakov.nure.ua/server/service/FlowerService/addFlowerRequest", output = "http://practice7.sherbakov.nure.ua/server/service/FlowerService/addFlowerResponse", fault = {
			@FaultAction(className = DAOException_Exception.class, value = "http://practice7.sherbakov.nure.ua/server/service/FlowerService/addFlower/Fault/DAOException") })
	public int addFlower(
			@WebParam(name = "Flowers", targetNamespace = "http://practice7.sherbakov.nure.ua/entity") Flower flowers)
			throws DAOException_Exception;

}
